<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <sectionGroup name="serviceBus">
      <section name="endpoints" type="Contour.Configurator.EndpointsSection, Contour" />
    </sectionGroup>
    <sectionGroup name="common">
      <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging" />
    </sectionGroup>
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog" />
  </configSections>

  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.2" />
  </startup>

  <connectionStrings>
  </connectionStrings>

  <appSettings>
    <add key="Azure.EventHubs.ConnectionString" value="Endpoint=sb://amishuhou.servicebus.windows.net/;SharedAccessKeyName=Writer;SharedAccessKey=20o2K8wgxI6px1EV3igaccOZrxzQ9nImrIXSJhTHOpI=" />
    <add key="Azure.EventHubs.EntityPath" value="cp" />
    <add key="RestClient.BaseUrl" value="http://localhost:50220/api" />
  </appSettings>

  <serviceBus>
    <endpoints>
      <endpoint name="EventGateway" parallelismLevel="4" connectionString="amqp://cp-sb-user:cp@cp-sb.086.npdev.lan:5672/cp">
        <qos prefetchCount="20" />
        <incoming>

          <on key="event.dialogs.automation.productions.added" label="event.dialogs.automation.productions.added" react="ContourMessageConsumer" type="JObject" requiresAccept="true" />
          <on key="event.dialogs.automation.productions.removed" label="event.dialogs.automation.productions.removed" react="ContourMessageConsumer" type="JObject" requiresAccept="true" />
          <on key="event.dialogs.messages.tariffication.failed" label="event.dialogs.messages.tariffication.failed" react="ContourMessageConsumer" type="JObject" requiresAccept="true" />
          <on key="event.dialogs.tariffication.attachment.collected" label="event.dialogs.tariffication.attachment.collected" react="ContourMessageConsumer" type="JObject" requiresAccept="true" />
          <on key="event.dialogs.tariffication.interval.added" label="event.dialogs.tariffication.interval.added" react="ContourMessageConsumer" type="JObject" requiresAccept="true" />
          <on key="event.dialogs.tariffication.interval.collected" label="event.dialogs.tariffication.interval.collected" react="ContourMessageConsumer" type="JObject" requiresAccept="true" />
          <on key="event.dialogs.tariffication.interval.removed" label="event.dialogs.tariffication.interval.removed" react="ContourMessageConsumer" type="JObject" requiresAccept="true" />
          <on key="event.dialogs.tariffication.interval.started" label="event.dialogs.tariffication.interval.started" react="ContourMessageConsumer" type="JObject" requiresAccept="true" />
          <on key="event.dialogs.tariffication.letter.collected" label="event.event.dialogs.tariffication.letter.collected" react="ContourMessageConsumer" type="JObject" requiresAccept="true" />
          <on key="event.dialogs.tariffication.message.collected" label="event.dialogs.tariffication.message.collected" react="ContourMessageConsumer" type="JObject" requiresAccept="true" />
          <on key="event.dialogs.tariffication.production.collected" label="event.dialogs.tariffication.production.collected" react="ContourMessageConsumer" type="JObject" requiresAccept="true" />

          <on key="event.dialogs.messages.ratified" label="event.dialogs.messages.ratified" react="ContourMessageConsumer" type="JObject" requiresAccept="true" />
          <on key="event.dialogs.messages.added" label="event.dialogs.messages.added" react="ContourMessageConsumer" type="JObject" requiresAccept="true" />
          <on key="event.dialogs.letters.added" label="event.dialogs.letters.added" react="ContourMessageConsumer" type="JObject" requiresAccept="true" />

          <on key="event.presence.added" label="event.presence.added" react="ContourMessageConsumer" type="JObject" requiresAccept="true" />
          <on key="event.presence.removed" label="event.presence.removed" react="ContourMessageConsumer" type="JObject" requiresAccept="true" />

          <on key="event.users.added" label="event.users.added" react="ContourMessageConsumer" type="JObject" requiresAccept="true" />
          <on key="event.users.changed" label="event.users.changed" react="ContourMessageConsumer" type="JObject" requiresAccept="true" />

        </incoming>
      </endpoint>
    </endpoints>
  </serviceBus>

  <common>
    <logging>
      <factoryAdapter type="Common.Logging.NLog.NLogLoggerFactoryAdapter, Common.Logging.NLog20">
        <arg key="configType" value="INLINE" />
      </factoryAdapter>
    </logging>
  </common>
  <nlog throwExceptions="true">
    <targets>
      <target name="file" type="File" encoding="utf-8" fileName="${shortdate}.txt" layout="${date:universalTime=True:format=yyyy-MM-dd HH\:mm\:ss.ffff} [${whenEmpty:${threadname}:whenEmpty=${threadid:padding=2}}] ${uppercase:${pad:${level}:padding=-5}} ${logger:shortName=true:padding=-35} ${message}${onexception:${newline}${exception:format=ToString}}" />
      <target name="console" type="ColoredConsole" layout="${date:universalTime=True:format=yyyy-MM-dd HH\:mm\:ss.ffff} [${whenEmpty:${threadname}:whenEmpty=${threadid:padding=2}}] ${uppercase:${pad:${level}:padding=-5}} ${logger:shortName=true:padding=-35} ${message}${onexception:${newline}${exception:format=ToString}}" />
    </targets>

    <rules>
      <logger name="*" minlevel="Trace" writeTo="file" />
      <logger name="*" minlevel="Debug" writeTo="console" />
    </rules>
  </nlog>

  <runtime>

    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Common.Logging" publicKeyToken="af08829b84f0328e" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>

  </runtime>
  
</configuration>